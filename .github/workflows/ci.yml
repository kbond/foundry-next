name: CI

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 1,16 * *'

jobs:
  tests:
    name: P:${{ matrix.php }}, S:${{ matrix.symfony }}, D:${{ matrix.database }}${{ matrix.deps == 'lowest' && ' (lowest)' || '' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ 8.1, 8.2 ]
        deps: [ highest ]
        symfony: [ 6.3.*, 6.4.* ]
        database: [ mysql, mongo ]
        include:
          - php: 8.1
            deps: lowest
            symfony: '*'
            database: mysql|mongo
          - php: 8.2
            deps: highest
            symfony: '*'
            database: none
          - php: 8.2
            deps: highest
            symfony: '*'
            database: mysql|mongo
          - php: 8.2
            deps: highest
            symfony: '*'
            database: pgsql|mongo
    env:
      DATABASE_URL: ${{ contains(matrix.database, 'mysql') && 'mysql://root:root@localhost:3306/foundry' || contains(matrix.database, 'pgsql') && 'postgresql://root:root@localhost:5432/foundry' || '' }}
      MONGO_URL: ${{ contains(matrix.database, 'mongo') && 'mongodb://127.0.0.1:27017/dbName?compressors=disabled&amp;gssapiServiceName=mongodb' || '' }}
    services:
      postgres:
        image: ${{ contains(matrix.database, 'pgsql') && 'postgres:15' || '' }}
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          POSTGRES_DB: foundry
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mongo:
        image: ${{ contains(matrix.database, 'mongo') && 'mongo:4' || '' }}
        ports:
          - 27017:27017
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          tools: flex

      - name: Install dependencies
        uses: ramsey/composer-install@v2
        with:
          dependency-versions: ${{ matrix.deps }}
          composer-options: --prefer-dist
        env:
          SYMFONY_REQUIRE: ${{ matrix.symfony }}

      - name: Set up MySQL
        if: contains(matrix.database, 'mysql')
        run: sudo /etc/init.d/mysql start

      - name: Validate Migrations
        if: contains(matrix.database, 'sql')
        shell: bash
        run: |
          bin/console doctrine:database:create --if-not-exists
          bin/console doctrine:schema:drop --force --full-database
          bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration
          bin/console doctrine:schema:validate

      - name: Test
        run: vendor/bin/phpunit
        shell: bash

      - name: Test with "migrate"
        if: contains(matrix.database, 'sql')
        run: vendor/bin/phpunit
        shell: bash
        env:
          DATABASE_MIGRATE_MODE: migrate

      - name: Test with "dama"
        if: contains(matrix.database, 'sql')
        run: vendor/bin/phpunit -c phpunit.dama.xml.dist
        shell: bash

      - name: Test with "dama" and "migrate"
        if: contains(matrix.database, 'sql')
        run: vendor/bin/phpunit -c phpunit.dama.xml.dist
        shell: bash
        env:
          DATABASE_MIGRATE_MODE: migrate

  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://root:root@localhost:5432/foundry
      MONGO_URL: mongodb://127.0.0.1:27017/dbName?compressors=disabled&amp;gssapiServiceName=mongodb
    services:
      mongo:
        image: mongo:4
        ports:
          - 27017:27017
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: root
          POSTGRES_DB: foundry
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          coverage: xdebug
          ini-values: xdebug.mode=coverage

      - name: Install dependencies
        uses: ramsey/composer-install@v2
        with:
          composer-options: --prefer-dist

      - name: Test with coverage
        run: vendor/bin/phpunit --coverage-text --coverage-clover coverage.xml
        shell: bash

      - name: Publish coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml

  composer-validate:
    uses: zenstruck/.github/.github/workflows/php-composer-validate.yml@main

  sca:
    uses: zenstruck/.github/.github/workflows/php-stan.yml@main

  fixcs:
    name: Run php-cs-fixer
    needs: sync-with-template
    if: (github.event_name == 'push' || github.event_name == 'schedule') && !startsWith(github.ref, 'refs/tags') && github.repository_owner == 'zenstruck'
    runs-on: ubuntu-latest
    steps:
      - uses: zenstruck/.github@php-cs-fixer
        with:
          php: 8
          key: ${{ secrets.GPG_PRIVATE_KEY }}
          token: ${{ secrets.COMPOSER_TOKEN }}

  sync-with-template:
    name: Sync meta files
    if: (github.event_name == 'push' || github.event_name == 'schedule') && !startsWith(github.ref, 'refs/tags') && github.repository_owner == 'zenstruck'
    runs-on: ubuntu-latest
    steps:
      - uses: zenstruck/.github@sync-with-template
        with:
          key: ${{ secrets.GPG_PRIVATE_KEY }}
          token: ${{ secrets.COMPOSER_TOKEN }}
